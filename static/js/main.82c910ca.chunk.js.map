{"version":3,"sources":["Icon.js","Dropdown.js","Search.js","Header.js","Footer.js","Loading.js","utils/isEmptyUtil.js","utils/covid19Util.js","App.js","serviceWorker.js","index.js"],"names":["icons","Icon","props","state","this","classes","icon","size","color","indexOf","theColor","console","error","className","style","height","width","minWidth","Component","Dropdown","disabled","options","placeholder","selectedvalue","name","optionsList","map","option","value","key","uuidv4","title","label","renderDropDown","labelPlacement","renderLabel","Search","showClear","inputValue","onChangeHandler","type","htmlFor","id","autoComplete","onChange","e","setState","target","role","tabIndex","onClick","Header","showSearch","showSettings","headerContentRef","React","createRef","prevProps","prevState","headerHeight","getHeaderRefHeight","mode","handleHeaderIsExpanded","handleHeaderHeight","Math","max","current","clientHeight","offsetHeight","scrollHeight","setHeaderIsExpanded","handleIsSearching","handleSearchValue","loading","handleSortBy","headerIsExpanded","searchValue","sortBy","repo","side","ref","handleShowSearch","bind","handleShowSettings","handleSearch","Footer","href","Loading","isNotEmptyArray","verifyArray","constructor","Array","length","thousandify","number","Number","toLocaleString","sortCountriesBy","countries","sort","a","b","countryA","country","toLowerCase","countryB","log","getCountries","allCountries","forEach","c","push","Object","keys","output","existing","filter","f","existingIndex","parseInt","mergeCountries","getData","data","csvtojsonV2","fromString","then","result","parseCSV","mergeCountriesStats","cases","cures","deaths","ca","existingCase","existingCaseIndex","cu","existingCure","existingCureIndex","de","existingDeath","existingDeathIndex","enrichCountriesStats","co","sick","sickPercent","curesPercent","deathsPercent","globalStats","reduce","initialState","errorStats","isSearching","stats","reducer","updatedProperty","renderCountry","rank","countryName","uuid","App","useReducer","useEffect","axios","all","get","res","statsGlobal","run","catch","err","message","headerTopPadding","paddingTop","st","i","string","substring","replace","renderStatsSearch","renderStats","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.82c910ca.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Icon.css'\n\nconst icons = [\n  'address',\n  'arrowDown',\n  'arrow',\n  'cal',\n  'close',\n  'download',\n  'edit',\n  'filter',\n  'home',\n  'logout',\n  'notification',\n  'phone',\n  'post',\n  'repeat',\n  'search',\n  'see',\n  'trash',\n  'burgerMenu',\n  'chevron',\n  'email',\n  'plus',\n  'secondaryMenu',\n];\n\nclass Icon extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render() {\n    const {\n      classes = '', // accepts CSS classNames as string\n      icon = '',\n      size = '',\n      color = '', // white | red ('dark-charcoal' is default and doesn't require this prop)\n    } = this.props;\n    if (icons.indexOf(icon) !== -1) {\n      const theColor = (color && (color === 'white' || color === 'red')) ? color : '';\n      if (color && color !== 'white' && color !== 'red') {\n        console.error(`[Icon]: You attempted to pass a color that is not supported: (${color}) to the icon: (${icon}). The only options are 'white' or 'red'. We applied the fallback/default color.`);\n      }\n      return (\n        <span className={`icon icon__${icon}${theColor ? `--${theColor}` : ''}${classes ? ` ${classes}` : ''}`} style={{ height: `${size}px`, width: `${size}px`, minWidth: `${size}px` }} />\n      );\n    }\n    console.error(`[Icon]: You attempted to pass an icon name that is not supported: (${icon}). See 'Icon.js' line 5 for options.`);\n    return null;\n  }\n}\n\nIcon.propTypes = {\n  icon: PropTypes.string.isRequired,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  classes: PropTypes.string,\n};\n\nexport default Icon;\n","/*\n  const languages = [{value: '1', title:'Norsk'},{value: '2', title:'Norsk2'},{value: '3', title:'Norsk3'}]\n  <Dropdown\n    name={'name'}\n    selectedvalue={options.findIndex((option) => option.title === value )}\n    disabled={disabled}\n    options={languages}\n    placeholder={placeholder}\n    onChange={(e) => console.log(e.target.value)}\n  />\n*/\n\nimport React, { Component } from 'react';\nimport uuidv4 from 'uuid/v4';\nimport './Dropdown.css'\nimport Icon from './Icon'\n\nclass Dropdown extends Component {\n  renderDropDown() {\n    const {\n      disabled = false,\n      options = [],\n      placeholder = '',\n      selectedvalue = '',\n      name = '',\n    } = this.props;\n    const optionsList = options.map(option => {\n      return (\n        <option value={option.value} key={uuidv4()}>{option.title}</option>\n      )\n    })\n    return (\n      <select\n        name={name || ''}\n        disabled={disabled}\n        value={selectedvalue}\n        {...this.props}\n      >\n        {placeholder &&\n          <option value=\"\">{placeholder}</option>\n        }\n        {optionsList}\n      </select>\n    )\n  }\n\n  renderLabel() {\n    const {\n      label = '',\n    } = this.props;\n    return (\n      <>\n        {label && (\n          <span className=\"dropdown__label\">\n            <em>{label}</em>\n          </span>\n        )}\n        {this.renderDropDown()}\n        <Icon classes=\"dropdown__icon\" icon=\"chevron\" size=\"12\" />\n      </>\n    );\n  }\n\n  render() {\n    const {\n      classes = '', // accepts CSS classNames as string\n      labelPlacement,\n      size = ''\n    } = this.props;\n    return (\n      <div className={`${size ? `dropdown--${size}` : ''}${classes ? ` ${classes}` : ''}`}>\n        <label className=\"dropdown\">\n          {labelPlacement === 'left'\n            ? (\n              <div className=\"dropdown__flex\">\n                {this.renderLabel()}\n              </div>\n            )\n            :\n              this.renderLabel()\n          }\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;\n","/*\n  <Search\n    title=\"\"\n    icon=\"\"\n    placeholder=\"Søk på navn\"\n    value={state.value}\n    onChangeHandler={(value) => console.log(value)}\n  />\n*/\n\nimport React, { Component } from 'react';\nimport uuidv4 from 'uuid/v4';\nimport Icon from './Icon'\nimport './Search.css'\n\nclass Search extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      showClear: false,\n      inputValue: ''\n    }\n  }\n\n  render() {\n    const {\n      classes = '', // accepts CSS classNames as string\n      title = '',\n      onChangeHandler,\n      icon = 'search',\n      type = 'text',\n      value = '',\n      placeholder = 'Søk'\n    } = this.props;\n    const {\n      inputValue,\n      showClear,\n    } = this.state;\n    return (\n      <div className={`search${classes ? ` ${classes}` : ''}`}>\n        <label htmlFor=\"search\">\n          {title && (\n            <span className=\"search__label\">\n              <em>{title}</em>\n            </span>\n          )}\n          <input\n            id={uuidv4()}\n            className=\"search__input\"\n            autoComplete=\"off\"\n            value={value || inputValue}\n            type={type}\n            placeholder={placeholder}\n            onChange={(e) => {\n              this.setState({\n                showClear: (e.target.value !== ''),\n                inputValue: e.target.value\n              })\n              onChangeHandler(e.target.value)\n            }}\n          />\n          {icon &&\n            <Icon classes=\"search__icon-search\" icon={icon} size=\"16\" />\n          }\n          {showClear && (\n            <div\n              className=\"search__icon-close\"\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => {\n                onChangeHandler('')\n                this.setState({\n                  showClear: false,\n                  inputValue: ''\n                })\n              }}\n            >\n              <Icon\n                icon=\"close\"\n                size=\"12\"\n              />\n            </div>\n          )\n          }\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport ForkMeOnGithub from 'fork-me-on-github';\nimport Dropdown from './Dropdown';\nimport Icon from './Icon';\nimport Search from './Search';\nimport './Header.css';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showSearch: false,\n      showSettings: false,\n    };\n    this.headerContentRef = React.createRef();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      headerHeight,\n    } = this.props;\n    const {\n      showSearch,\n      showSettings,\n    } = this.state;\n    if (\n      headerHeight !== prevProps.headerHeight ||\n      showSearch !== prevState.showSearch ||\n      showSettings !== prevState.showSettings\n    ) {\n      this.getHeaderRefHeight()\n    }\n  }\n\n  setHeaderIsExpanded(value, mode) {\n    const {\n      handleHeaderIsExpanded,\n    } = this.props;\n    const {\n      showSearch,\n      showSettings,\n    } = this.state;\n    if (value) {\n      handleHeaderIsExpanded(true);\n    } else if (!value && mode === 'search' && showSettings) {\n      handleHeaderIsExpanded(true);\n    } else if (!value && mode === 'settings' && showSearch) {\n      handleHeaderIsExpanded(true);\n    } else if (!value && mode === 'search' && !showSettings) {\n      // Syntax sugar\n      handleHeaderIsExpanded(false);\n    } else if (!value && mode === 'settings' && !showSearch) {\n      // Syntax sugar\n      handleHeaderIsExpanded(false);\n    } else {\n      handleHeaderIsExpanded(false);\n    }\n  }\n\n  getHeaderRefHeight() {\n    const {\n      handleHeaderHeight,\n    } = this.props;\n    const finalHeaderHeight = Math.max(\n      this.headerContentRef.current.clientHeight,\n      this.headerContentRef.current.offsetHeight,\n      this.headerContentRef.current.scrollHeight,\n    )\n    handleHeaderHeight(finalHeaderHeight);\n  }\n\n  handleShowSearch() {\n    const {\n      showSearch,\n    } = this.state;\n    this.setState({\n      showSearch: !showSearch\n    });\n    this.setHeaderIsExpanded(!showSearch, 'search');\n    this.getHeaderRefHeight('search');\n  };\n\n  handleShowSettings() {\n    const {\n      showSettings,\n    } = this.state;\n    this.setState({\n      showSettings: !showSettings\n    });\n    this.setHeaderIsExpanded(!showSettings, 'settings');\n    this.getHeaderRefHeight('settings');\n  };\n\n  handleSearch(value) {\n    const { handleIsSearching, handleSearchValue } = this.props;\n    handleIsSearching(true);\n    handleSearchValue(value);\n  };\n\n  render() {\n    const {\n      loading,\n      handleSortBy,\n      headerIsExpanded,\n      searchValue,\n      sortBy\n    } = this.props;\n    const { showSearch, showSettings } = this.state;\n    const options = [\n      {\n        value: 'cases',\n        title: 'Cases',\n      },\n      {\n        value: 'country',\n        title: 'Country',\n      },\n      {\n        value: 'cures',\n        title: 'Cures',\n      },\n      {\n        value: 'curesPercent',\n        title: 'Cures Percent',\n      },\n      {\n        value: 'deaths',\n        title: 'Deaths',\n      },\n      {\n        value: 'deathsPercent',\n        title: 'Deaths Percent',\n      },\n      {\n        value: 'sick',\n        title: 'Sick',\n      },\n    ];\n    const placeholder = 'Sort by';\n    return (\n      <div\n        className={`header${headerIsExpanded ? ' is-expanded' : ''}`}\n      >\n        <ForkMeOnGithub\n          repo=\"https://github.com/dreamyguy/covid-19\"\n          side=\"left\"\n        />\n        <div className=\"header__content\" ref={this.headerContentRef}>\n          <div className=\"header__items display-flex align-center\">\n            <div className=\"logo display-flex flex-direction-column\">\n              <h1 className=\"heading--site\">COVID-19</h1>\n              <div className=\"legends display-flex\">\n                <div className=\"legend legend--cures\">\n                  <span className=\"legend__color\" />\n                  <span className=\"legend__label\">Cures</span>\n                </div>\n                <div className=\"legend legend--sick\">\n                  <span className=\"legend__color\" />\n                  <span className=\"legend__label\">Sick</span>\n                </div>\n                <div className=\"legend legend--deaths\">\n                  <span className=\"legend__color\" />\n                  <span className=\"legend__label\">Deaths</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"message display-flex flex-direction-column\">\n              <h2 className=\"heading--message\">There's a human story behind every number.</h2>\n            </div>\n            <div className=\"options display-flex\">\n              <button className={`option option--search${showSearch ? ' is-active' : ''}`} onClick={this.handleShowSearch.bind(this)}>\n                {showSearch\n                  ?\n                    <Icon icon=\"search\" color=\"white\" size=\"24\" />\n                  :\n                    <Icon icon=\"search\" size=\"24\" />\n                }\n              </button>\n              <button className={`option option--settings${showSettings ? ' is-active' : ''}`} onClick={this.handleShowSettings.bind(this)}>\n                {showSettings\n                  ?\n                    <Icon icon=\"filter\" color=\"white\" size=\"24\" />\n                  :\n                    <Icon icon=\"filter\" size=\"24\" />\n                }\n              </button>\n            </div>\n          </div>\n          {showSettings && (\n            <Dropdown\n              name=\"dropdown--sortby\"\n              classes=\"dropdown--sortby\"\n              label=\"Sort by:\"\n              // eslint-disable-next-line react/jsx-boolean-value\n              labelPlacement=\"left\"\n              selectedvalue={sortBy}\n              disabled={loading}\n              options={options}\n              placeholder={placeholder}\n              onChange={(e) => {\n                handleSortBy(e.target.value)\n              }}\n            />\n          )}\n          {showSearch && (\n            <Search\n              classes=\"search--country\"\n              value={searchValue}\n              placeholder=\"Filter by country name\"\n              onChangeHandler={(value) => {\n                this.handleSearch(value)\n              }}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Header;","import React from 'react';\nimport './Footer.css';\n\nconst Footer = () => (\n  <footer>\n    Developed by&nbsp;<a className=\"link\" href=\"https://github.com/dreamyguy/\">Wallace Sidhrée</a>\n  </footer>\n);\n\nexport default Footer;","import React from 'react';\nimport Icon from './Icon';\nimport './Loading.css';\n\nconst Loading = () => (\n  <div className=\"loading__text\">\n    <h3>Fetching live data and preparing it.</h3>\n    <p className=\"loading__option\">\n      <b>Once the loading is done</b>:\n    </p>\n    <p className=\"loading__option\">\n      <span className=\"option option--settings centered\">\n        <Icon icon=\"filter\" size=\"24\" />\n      </span>\n      Activate filtering options.\n    </p>\n    <p>\n      <span className=\"option option--search centered\">\n        <Icon icon=\"search\" size=\"24\" />\n      </span>\n      Search by country name.\n    </p>\n    <p>Number of cases is the default view, <em><b>but the data can be filtered</b> to show other calculations</em>.</p>\n  </div>\n);\n\nexport default Loading;\n","// Check if object is empty or not\nexport function isEmptyObject (verifyObject) {\n  if (verifyObject && verifyObject.constructor === Object) {\n    return Object.keys(verifyObject).length === 0;\n  }\n  if (process.env.NODE_ENV !== 'test') {\n    console.error(`[isEmptyObject]: The object being verified is not an object: ${verifyObject}`);\n  }\n  return false;\n}\n\n// Check if object is NOT empty\nexport function isNotEmptyObject (verifyObject) {\n  if (verifyObject && verifyObject.constructor === Object) {\n    return Object.keys(verifyObject).length > 0;\n  }\n  if (process.env.NODE_ENV !== 'test') {\n    console.error(`[isNotEmptyObject]: The object being verified is not an object: ${verifyObject}`);\n  }\n  return false;\n}\n\n// Check if array is empty or not\nexport function isEmptyArray (verifyArray) {\n  if (verifyArray && verifyArray.constructor === Array) {\n    return verifyArray.length === 0;\n  }\n  if (process.env.NODE_ENV !== 'test') {\n    console.error(`[isEmptyArray]: The array being verified is not an array: ${verifyArray}`);\n  }\n  return false;\n}\n\n// Check if array is NOT empty\nexport function isNotEmptyArray (verifyArray) {\n  if (verifyArray && verifyArray.constructor === Array) {\n    return verifyArray.length > 0;\n  }\n  if (process.env.NODE_ENV !== 'test') {\n    console.error(`[isNotEmptyArray]: The array being verified is not an array: ${verifyArray}`);\n  }\n  return false;\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-unused-expressions */\nimport csvtojsonV2 from 'csvtojson';\nimport { isNotEmptyArray } from \"./isEmptyUtil\";\n\nexport const thousandify = number => Number(number).toLocaleString();\n\nexport const valueDividedBy = ({\n  value,\n  dividedBy,\n}) => value / dividedBy;\n\n// Check if string contains a substring\nexport const containsString = (string, substring) => {\n  if (string.toLowerCase().replace('-', ' ').indexOf(substring.toLowerCase().replace('-', ' ')) !== -1) {\n    return true;\n  }\n  return false;\n}\n\nexport const sortCountriesBy = ({ countries, sortBy, mode }) => {\n  if (\n    countries &&\n    isNotEmptyArray(countries)\n  ) {\n    if (sortBy === 'country') {\n      // 'country' is a string, so it needs special treatment\n      countries.sort((a, b) => {\n        const countryA = a.country.toLowerCase();\n        const countryB = b.country.toLowerCase();\n        if (countryA < countryB) {\n          return -1;\n        }\n        if (countryA > countryB) {\n          return 1;\n        }\n        // names must be equal\n        return 0;\n      });\n    } else {\n      // Only dealing with numbers from now on\n      // eslint-disable-next-line no-lonely-if\n      if (mode === 'desc') {\n        countries.sort((a, b) => b[sortBy] - a[sortBy]);\n      } else {\n        countries.sort((a, b) => a[sortBy] - b[sortBy]);\n      }\n    }\n    return countries;\n  }\n  return console.log(`[sortCountriesBy]: 'countries' (${countries}) is not an array or is empty`);\n}\n\nexport const mergeCountries = countries => {\n  const output = [];\n  countries.forEach(c => {\n    const existing = output.filter(f => f.country === c.country);\n    if (existing.length) {\n      const existingIndex = output.indexOf(existing[0]);\n      output[existingIndex].value = parseInt(output[existingIndex].value, 10) + parseInt(c.value, 10);\n    } else {\n      c.value = parseInt(c.value, 10);\n      output.push(c);\n    }\n  });\n  return output;\n};\n\nexport const getCountries = countries => {\n  const allCountries = [];\n  countries.forEach(c => {\n    allCountries.push({\n      country: c[\"Country/Region\"],\n      value: c[Object.keys(c)[Object.keys(c).length - 1]],\n    });\n  });\n  return mergeCountries(allCountries);\n};\n\nexport const parseCSV = data => csvtojsonV2({\n  output: \"json\"\n})\n.fromString(data)\n.then(\n  result => getCountries(result)\n);\n\nexport const getData = (data, type) => parseCSV(data, type);\n\nexport const mergeCountriesReduce = countries => {\n  return countries.reduce((o, cur) => {\n    const occurs = o.reduce((n, item, i) => item.country === cur.country ? i : n, -1);\n    if (occurs >= 0) {\n      o[occurs].value = parseInt(o[occurs].value, 10) + parseInt(cur.value, 10);\n    } else {\n      const obj = {\n        country: cur.country,\n        value: parseInt(cur.value, 10)\n      };\n      o = o.concat([obj]);\n    }\n    return o;\n  }, []);\n};\n\nexport const mergeCountriesStats = ({ cases, cures, deaths }) => {\n  const output = [];\n  cases && isNotEmptyArray(cases) && cases.forEach(ca => {\n    const existingCase = output.filter(f => f.country === ca.country);\n    if (existingCase.length) {\n      const existingCaseIndex = output.indexOf(existingCase[0]);\n      output[existingCaseIndex] = {\n        ...output[existingCaseIndex],\n        cases: ca.value,\n      }\n    } else {\n      output.push({\n        country: ca.country,\n        cases: ca.value,\n      });\n    }\n    cures && isNotEmptyArray(cures) && cures.forEach(cu => {\n      const existingCure = output.filter(f => f.country === cu.country);\n      if (existingCure.length) {\n        const existingCureIndex = output.indexOf(existingCure[0]);\n        output[existingCureIndex] = {\n          ...output[existingCureIndex],\n          cures: cu.value,\n        }\n      } else {\n        output.push({\n          country: cu.country,\n          cures: cu.value,\n        });\n      }\n      deaths && isNotEmptyArray(deaths) && deaths.forEach(de => {\n        const existingDeath = output.filter(f => f.country === de.country);\n        if (existingDeath.length) {\n          const existingDeathIndex = output.indexOf(existingDeath[0]);\n          output[existingDeathIndex] = {\n            ...output[existingDeathIndex],\n            deaths: de.value,\n          }\n        } else {\n          output.push({\n            country: de.country,\n            deaths: de.value,\n          });\n        }\n      });\n    });\n  });\n  return output;\n};\n\nexport const enrichCountriesStats = countries => {\n  const output = [];\n  countries && isNotEmptyArray(countries) && countries.forEach(co => {\n    const { country, cases, cures, deaths/* , population */ } = co;\n    const sick = cases - (cures + deaths);\n    output.push({\n      country,\n      cases,\n      sick,\n      cures,\n      deaths,\n      // population,\n      sickPercent: sick * 100 / cases,\n      curesPercent: cures * 100 / cases,\n      deathsPercent: deaths * 100 / cases,\n      // casesPerCapita: cases * 100 / population,\n      // curesPerCapita: cures * 100 / population,\n      // deathsPerCapita: deaths * 100 / population,\n    });\n  });\n  return output;\n};\n\nexport const globalStats = countries => {\n  let output = [];\n  if (countries && isNotEmptyArray(countries)) {\n    output = countries.reduce((a, b) => ({\n      country: 'WORLD',\n      cases: (a.cases + b.cases),\n      cures: (a.cures + b.cures),\n      deaths: (a.deaths + b.deaths),\n      sick: ((a.cases - (a.cures + a.deaths)) + (b.cases - (b.cures + b.deaths))),\n      sickPercent: (((a.cases - (a.cures + a.deaths)) + (b.cases - (b.cures + b.deaths))) * 100) / (a.cases + b.cases),\n      curesPercent: ((a.cures + b.cures) * 100) / (a.cases + b.cases),\n      deathsPercent: ((a.deaths + b.deaths) * 100) / (a.cases + b.cases),\n    }));\n  };\n  return output;\n};\n","import React, { useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport uuid from 'uuid/v4'\nimport Header from './Header';\nimport Footer from './Footer';\nimport Loading from './Loading';\nimport {\n  containsString,\n  enrichCountriesStats,\n  getData,\n  globalStats,\n  mergeCountriesStats,\n  sortCountriesBy,\n  thousandify,\n} from './utils/covid19Util';\nimport { isNotEmptyArray } from './utils/isEmptyUtil';\nimport './App.css';\n\nconst casesData = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv';\nconst curesData = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv';\nconst deathsData = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv';\n\nconst initialState = {\n  errorStats: '',\n  headerHeight: null,\n  headerIsExpanded: false,\n  isSearching: false,\n  searchValue: '',\n  loading:  false,\n  sortBy: 'cases',\n  stats: [],\n};\n\nconst reducer = (prevState, updatedProperty) => ({\n  ...prevState,\n  ...updatedProperty,\n});\n\nconst renderCountry = (country, rank) => {\n  const {\n    country: countryName,\n    cases,\n    cures,\n    deaths,\n    sick,\n    sickPercent,\n    curesPercent,\n    deathsPercent,\n  } = country;\n  return (\n    <li key={uuid()} className=\"country\">\n      <div>\n        <h2 className=\"heading--country\">{rank}. {countryName}</h2>\n        <div className=\"display-flex stats\">\n          {cures ? <span className=\"stat stat--cures\">{thousandify(cures)}</span> : null}\n          {sick ? <span className=\"stat stat--sick\">{thousandify(sick)}</span> : null}\n          {deaths ? <span className=\"stat stat--deaths\">{thousandify(deaths)}</span> : null}\n        </div>\n      </div>\n      <div className=\"display-flex percentages\">\n        <div className=\"percentage percentage--cures\" style={{ width: `${curesPercent}%` }} />\n        <div className=\"percentage percentage--sick\" style={{ width: `${sickPercent}%` }} />\n        <div className=\"percentage percentage--deaths\" style={{ width: `${deathsPercent}%` }} />\n      </div>\n      <div className=\"total\">{thousandify(cases)}</div>\n    </li>\n  );\n}\n\nconst renderStats = stats => {\n  const output = [];\n  stats.forEach((st, i) => {\n    output.push(\n      renderCountry(st, i + 1)\n    )\n  })\n  return output;\n}\n\nconst renderStatsSearch = ({ stats, searchValue }) => {\n  const output = [];\n  stats.forEach((st, i) => {\n    if (containsString(st.country, searchValue)) {\n      output.push(\n        renderCountry(st, i + 1)\n      )\n    }\n  })\n  return output;\n}\n\nconst App = () => {\n\n  const [state, setState] = useReducer(reducer, initialState);\n\n  // 'sortBy' value is returned all the way from 'Header' > 'Dropdown'\n  const handleSortBy = (sortBy) => {\n    setState({ sortBy });\n  };\n  // 'headerHeight' value is returned from 'Header'\n  const handleHeaderHeight = (headerHeight) => {\n    setState({ headerHeight });\n  };\n  // 'handleHeaderIsExpanded' status is returned from 'Header'\n  const handleHeaderIsExpanded = (headerIsExpanded) => {\n    setState({ headerIsExpanded });\n  };\n  // 'handleIsSearching' status is returned from 'Header'\n  const handleIsSearching = (isSearching) => {\n    setState({ isSearching });\n  };\n  // 'handleSearchValue' value is returned from 'Header'\n  const handleSearchValue = (searchValue) => {\n    setState({ searchValue });\n  };\n\n  useEffect(() => {\n    setState({ loading: true });\n    const getCasesData = () => axios.get(casesData)\n    const getCuresData = () => axios.get(curesData)\n    const getDeathsData = () => axios.get(deathsData);\n    axios.all([\n        getCasesData(),\n        getCuresData(),\n        getDeathsData(),\n      ])\n      .then(res => {\n        if (res && isNotEmptyArray(res)) {\n          // We need to do this because 'csv2json' (used by 'getData()')\n          // returns a promise object\n          const run = async () => {\n            const cases = await getData(res[0].data);\n            const cures = await getData(res[1].data);\n            const deaths = await getData(res[2].data);\n            if (\n              isNotEmptyArray(cases) &&\n              isNotEmptyArray(cures) &&\n              isNotEmptyArray(deaths)\n            ) {\n              const stats = enrichCountriesStats(mergeCountriesStats({\n                cases,\n                cures,\n                deaths,\n              }));\n              const statsGlobal = globalStats(stats);\n              stats.push(statsGlobal);\n              setState({\n                stats,\n                loading: false\n              });\n            }\n          }\n          return run();\n        }\n        return null;\n      })\n      .catch(err => {\n        setState({\n          errorStats: err.message,\n          loading: false\n        });\n      });\n  }, []);\n\n  const {\n    headerHeight,\n    headerIsExpanded,\n    isSearching,\n    loading,\n    searchValue,\n    sortBy,\n    stats,\n  } = state;\n\n  const headerTopPadding = headerIsExpanded ? `${headerHeight + 30}px` : `${78 + 30}px`;\n\n  return (\n    <>\n      <Header\n        handleHeaderHeight={handleHeaderHeight}\n        handleHeaderIsExpanded={handleHeaderIsExpanded}\n        handleIsSearching={handleIsSearching}\n        handleSearchValue={handleSearchValue}\n        handleSortBy={handleSortBy}\n        headerHeight={headerHeight}\n        headerIsExpanded={headerIsExpanded}\n        loading={loading}\n        sortBy={sortBy}\n      />\n      <div className=\"app align-center\" style={{ paddingTop: headerTopPadding }}>\n        {loading\n          ?\n            <Loading />\n          :\n            stats && isNotEmptyArray(stats) && (\n              <ul className=\"countries\">\n                {isSearching && searchValue\n                  ? (\n                    <>\n                      {renderStatsSearch({\n                        stats: sortCountriesBy({\n                          countries: stats,\n                          sortBy,\n                          mode: 'desc',\n                        }),\n                        isSearching,\n                        searchValue\n                      })}\n                    </>\n                  ) : (\n                    <>\n                      {renderStats(sortCountriesBy({\n                        countries: stats,\n                        sortBy,\n                        mode: 'desc',\n                      }))}\n                    </>\n                  )\n                }\n              </ul>\n            )\n        }\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}